<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced.
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4271 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml">
<!ENTITY RFC2547 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2547.xml">
<!ENTITY RFC4364 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4364.xml">
<!ENTITY RFC4760 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4760.xml">
<!ENTITY RFC5492 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5492.xml">
<!ENTITY RFC6020 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml">
<!ENTITY RFC6241 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml">
<!ENTITY RFC7224 SYSTEM
  "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7224.xml">
<!ENTITY I-D.ietf-netmod-routing-cfg SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-netmod-routing-cfg-15.xml">
<!ENTITY I-D.ietf-rtgwg-routing-types SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-rtgwg-routing-types-17.xml">
<!ENTITY I-D.ietf-rtgwg-ni-model SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-rtgwg-ni-model-04.xml">
<!ENTITY I-D.ietf-idr-bgp-model SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-idr-bgp-model-02.xml">
<!--<!ENTITY I-D.draft-bierman-netconf-yang-api SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-bierman-netconf-restconf-01.xml">
-->
<!--<!ENTITY I-D.draft-lhotka-netmod-yang-json SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-netmod-yang-json-00.xml">
-->  
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that
    most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-bess-l3vpn-yang-02.txt"
ipr="pre5378Trust200902">
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: full3667, noModification3667, noDerivatives3667
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>

    <title abbrev="Yang Data Model for BGP/MPLS L3 VPNs">
    Yang Data Model for BGP/MPLS L3 VPNs</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->


    <author fullname="Dhanendra Jain" initials="D."
            surname="Jain">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>dhjain@cisco.com</email>
      </address>
    </author>

    <author fullname="Keyur Patel" initials="K.P."
            surname="Patel">
      <organization>Cisco</organization>     
      <address>
        <postal>
         <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>keyur@arrcus.com</email>
      </address>
    </author>

    <author fullname="Patrice Brissette" initials="P.B"
            surname="Brissette">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>170 W. Tasman Drive</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>USA</country>
        </postal>
        <email>pbrisset@cisco.com</email>
      </address>
    </author>

     <author fullname="Zhenbin Li" initials="Z. " surname="Li">
      <organization>Huawei Technologies</organization>
       <address>
        <postal>
         <street>Huawei Bld., No.156 Beiqing Rd.</street>
         <city>Beijing</city>
         <code>100095</code>
         <country>China</country>
       </postal>
       <email>lizhenbin@huawei.com</email>
      </address>
     </author>

     <author fullname="Shunwan Zhuang" initials="S. " surname="Zhuang">
      <organization>Huawei Technologies</organization>
       <address>
        <postal>
         <street>Huawei Bld., No.156 Beiqing Rd.</street>
         <city>Beijing</city>
         <code>100095</code>
         <country>China</country>
        </postal>
        <email>zhuangshunwan@huawei.com</email>
       </address>
     </author>

     <author fullname="Xufeng Liu" initials="X." surname="Liu">
      <organization>Jabil</organization>
       <address>
        <postal><street>8281 Greensboro Drive, Suite 200 </street>
        <city>McLean</city>
        <region>VA</region>
        <code>22102</code>
        <country>USA</country>
        </postal>
        <email>Xufeng_Liu@jabil.com</email>
       </address>
      </author>

     <author fullname="Jeffrey Haas" initials="J." surname="Haas">
      <organization>Juniper Networks</organization>
       <address>
        <postal>
          <street/>
         </postal>
         <email>jhaas@juniper.net</email>
       </address>
     </author>

    <author fullname="Santosh Esale " initials="S." surname="Esale ">
     <organization>Juniper Networks</organization>
      <address>
       <postal><street>1194 N. Mathilda Ave.</street>
        <city>Sunnyvale</city><region>CA</region>
        <code>94089</code><country>US</country>
       </postal>
       <email>sesale@juniper.net</email></address>
      </author>
     
    <author fullname="Bin Wen" initials="B." surname="Wen">
     <organization>Comcast</organization>
      <address>
      <postal><street/></postal>
      <email>Bin_Wen@cable.comcast.com</email>
      </address>
    </author>





    <date day="15" month="Oct" year="2017" />

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>BESS Working Group</workgroup>

    <keyword>IDR</keyword>

    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

<abstract>
<t>
This document defines a YANG data model that can be used to configure and 
manage BGP Layer 3 VPNs.   
</t>
</abstract>

  </front>

  <middle>

<section anchor="introduction" title="Introduction">
<t>
YANG <xref target="RFC6020"/> is a data definition language that was 
introduced to define the contents of a 
conceptual data store that allows networked devices to be managed using 
NETCONF <xref target="RFC6241"/>.    
YANG is proving relevant beyond its 
initial confines, as bindings to other interfaces 
(e.g. ReST)  
<!--<xref target="I-D.draft-bierman-netconf-yang-api"/> -->
and encodings other 
than XML (e.g. JSON) 
<!-- <xref target="I-D.draft-lhotka-netmod-yang-json"/>-->
are being defined.   Furthermore, YANG data models 
can be used as the basis of implementation for other interfaces, such as CLI and 
programmatic APIs.  
</t>
<t>
This document defines a YANG model that can be used to configure and manage 
BGP L3VPNs <xref target="RFC4364"/>. It contains VRF sepcific parameters as well as BGP 
specific parameters applicable for L3VPNs. The individual containers defined in this model 
contain control knobs for configuration for that purpose, as well as a few data nodes that 
can be used to monitor health and gather statistics.

</t>

 
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section> <!-- for Introductions section -->

      <section title="Definitions and Acronyms">
        <t>
          AF: Address Family  
        </t>
        <t>
          AS: Autonomous System
        </t>
        <t>
          ASBR: Autonomous System Border Router
        </t>
        <t> 
          BGP: Border Gateway Protocol 
        </t>
        <t>
          CE: Customer Edge
        </t>
        <t> 
          PE: Provider Edge 
        </t>
 	<t>
          L3VPN: Layer 3 VPN
        </t>
        <t>
          NETCONF: Network Configuration Protocol        
        </t>
        <t> 
          RD: Route Distinguisher
        </t>
        <t>
          ReST: Representational State Transfer, a style of stateless interface and protocol 
          that is generally carried over HTTP        
        </t>
        <t>
          RTFilter: Route Filter
        </t>
        <t>
          VPN: Virtual Private Network
        </t>
        <t>
          VRF: Virtual Routing and Forwarding
        </t>
        <t>
          YANG: Data definition language for NETCONF
        </t>
      </section>

<section title="Design of BGP L3VPN Data Model">
  <section title="Overview">
    <t>
     There are two parts of the BGP L3VPN yang data model. The first part of the model defines 
     VRF specific parameters for L3VPN by augmenting the network-instance container defined in the 
     network instance model [I-D.ietf-rtgwg-ni-model] and the second part of the model defines BGP 
     specific parameters for the L3VPN by augmenting the base BGP data model defined in 
     [I-D.ietf-idr-bgp-model].
    </t>
   </section>

   <section title="VRF Specific Configuration">
     <t>
       IETF network instance model defines various ni-types, one of which is l3vpn. 
       This provides an anchor point to add a new container l3vpn.  Under this container per  
       VPN parameters pertaining to L3VPN are added.
     </t>
      
      <section title ="VRF interface">
       <t> To associate a VRF instance with an interface, bind-network-instance config should be used. 
           This is covered in the base network instance model <xref target="I-D.ietf-rtgwg-ni-model"/>.
       </t>
      </section>

      <section title="Route distinguisher">
       <t>
         Route distinguisher (RD) is an unique identifier used in VPN routes to distinguish prefixes 
         across different VPNs. RD is 8 byte field as defined in the <xref target="RFC4364"/>. 
         Where the first two bytes refer to type followed by 6 bytes of value. The format of the value 
         is dependent on type. In the yang model, RDs are defined l3vpn container under network-instance.
       </t>
      </section>


     <section title="Import and export route targets">
      <t>

      Route-target (RT) is an extended community used to specify the rules for importing and exporting 
      the routes for each VRF as defined in <xref target="RFC4364"/>. This is applicable in the context 
      of an address-family under the VRF.       Under the l3vpn container, statements for import and export 
      route-targets are added for ipv4 and ipv6 address family. Both import and export sets are modeled 
      as a list of rout-targets.   An import rule is modeled as list of RTs or a policy leafref specifying 
      the list of RTs to be matched for importing routes into the VRF. Similarly an export rule is set or 
      RTs or a policy leafref specifying the list of RTs which should be attached to routes exported from 
      this VRF. In the case where policy is used to specify the RTs, a reference to the policy via leafref 
      is used in this model, but actual definition of policy is outside the scope of this document.  

      In addition, this section also defines parameters for the import from global routing table and 
      export to global routing table, as well as route limit per VPN instance for ipv4 and ipv6 address 
      family.
     </t>
     </section>

     <section title="Forwarding mode">
       <t> 
          This configuration augments interface list under interface container under a network instance
          as defined in IETF network instance model <xref target="I-D.ietf-rtgwg-ni-model"/>. Forwarding 
          mode configuration is required under the ASBR facing interface to enable mpls forwarding 
          for directly connected BGP peers for inter-as option B peering. 
      </t>
     </section>

     <section title="Label security">
        <t>
          For inter-as option-B peering across ASs, under the ASBR facing interface, mpls label security 
          enables the checks for RPF label on incoming packets. Ietf-interface container is augmented 
          to add this config.   
        </t>
     </section>

     <section title="Yang tree">

      <t>
       <figure align="center">
        <artwork align="left">

module: ietf-bgp-l3vpn
  augment /ni:network-instances/ni:network-instance/ni:ni-type:
    +--:(l3vpn)
       +--rw l3vpn
          +--rw rd?        bgp-rd-type
          +--ro auto-rd?   rt-types:route-distinguisher
          +--rw ipv4
          |  +--rw unicast
          |     +--rw vpn-targets
          |     |  +--rw vpn-target* [route-target]
          |     |  |  +--rw route-target         rt-types:route-target
          |     |  |  +--rw route-target-type    rt-types:route-target-type
          |     |  +--rw route-policy?   string
          |     +--rw import-from-global
          |     |  +--rw enable?             boolean
          |     |  +--rw advertise-as-vpn?   boolean
          |     |  +--rw route-policy?       string
          |     |  +--rw bgp-valid-route?    boolean
          |     |  +--rw protocol?           enumeration
          |     |  +--rw instance?           string
          |     +--rw export-to-global
          |     |  +--rw enable?   boolean
          |     +--rw routing-table-limit
          |     |  +--rw routing-table-limit-number?   uint32
          |     |  +--rw (routing-table-limit-action)?
          |     |     +--:(enable-alert-percent)
          |     |     |  +--rw alert-percent-value?          rt-types:percentage
          |     |     +--:(enable-simple-alert)
          |     |        +--rw simple-alert?                 boolean
          |     +--rw tunnel-params
          |        +--rw tunnel-policy?   string

  augment /if:interfaces/if:interface:
    +--rw forwarding-mode?       enumeration
    +--rw mpls-label-security
       +--rw rpf?   boolean

	     </artwork>
	  </figure>
	</t>
      </section>

</section>

<section title="BGP Specific Configuration">
    <t>
      The BGP specific configuration for L3VPNs is defined by augmenting base BGP model 
      <xref target="I-D.ietf-idr-bgp-model"/>. In particular, specific knobs are added under neighbor 
      and address family containers to handle VPN routes and ASBR peering. 

    </t>
    <section title="VPN peering">
     <t> 
      For Peering between PE routers, specific VPN address family needs to be enabled under BGP 
      container in the context of core instance. Base BGP draft <xref target="I-D.ietf-idr-bgp-model"/> 
      has l3vpn address family in the list of identity refs for AFs under global and neighbor modes. 
      The same is augmented here for additional knobs. For peering with CE routers the VRF specific BGP 
      configurations such as neighbors and address-family are covered in base BGP config, except that 
      such configuration will be in the context of a VRF. The instance of BGP in this case would be a 
      separate instance in the context of vrf-root as defined in <xref target="I-D.ietf-rtgwg-ni-model"/>.
     </t>
     </section>

     <section title="VPN prefix limits">
      <t>
       Limits for max number of VPN prefixes for a PE router is defined in the context of VPN address 
       family under BGP. This would be the total number of prefixes in VPN table per AF in the context 
       of BGP protocol. Route table limit for ipv4 and ipv6 address family for each VPN instance is also 
       defined under BGP. The total prefix limit per VPN, including all the protocols is defined in the 
       context of VRF address family under routing instance. 
      </t>
     </section>

    <section title="Label Mode">
     <t>
       Label mode knobs control the label allocation behavior for VRF routes. Such as to specify 
       Per-site, Per-vpn and Per-route label allocation. These knobs augment BGP global AF containers 
       in the context of default routing instance.
    </t>
    </section>

    <section title="ASBR options">
     <t>
      This includes few specific knobs for ASBR peering methods illustrated in <xref target="RFC4364"/>. 
      Such as route target retention on ASBRs for inter-as VPN peering across ASBRs with option-B method. 
      Appropriate containers under BGP AF. 
 
     </t>
   </section>

   <section title="Yang tree">
    <t>
     <figure align="center">
      <artwork align="left">

module: ietf-bgp-l3vpn
  augment /bgp:bgp/bgp:global/bgp:afi-safis/bgp:afi-safi/bgp:l3vpn-ipv4-unicast:
    +--rw retain-route-targets
    |  +--rw all?            empty
    |  +--rw route-policy?   string
    +--rw vpn-prefix-limit
       +--rw prefix-limit-number?   uint32
       +--rw (prefix-limit-action)?
          +--:(enable-alert-percent)
          |  +--rw alert-percent-value?   rt-types:percentage
          |  +--rw route-unchanged?       boolean
          +--:(enable-simple-alert)
             +--rw simple-alert?          boolean

  augment /bgp:bgp/bgp:global/bgp:afi-safis/bgp:afi-safi/bgp:ipv4-unicast:
    +--rw label-mode?            bgp-label-mode
    +--rw routing-table-limit
       +--rw routing-table-limit-number?   uint32
       +--rw (routing-table-limit-action)?
          +--:(enable-alert-percent)
          |  +--rw alert-percent-value?          rt-types:percentage
          +--:(enable-simple-alert)
             +--rw simple-alert?                 boolean

	  </artwork>
	</figure>
    </t>
   </section>
    
   </section>

</section>

<section title="BGP Yang Module">
 <figure>
 <artwork>

&lt;CODE BEGINS&gt; file "ietf-bgp-l3vpn@2017-10-15.yang"

module ietf-bgp-l3vpn {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-bgp-l3vpn";
  // replace with IANA namespace when assigned
  prefix l3vpn ;

  import ietf-network-instance {
    prefix ni;
    revision-date 2017-09-27;
  }

  import ietf-routing-types {
    prefix rt-types;
    revision-date 2017-10-13;
  }

  import ietf-interfaces {
    prefix if;
  }

  import ietf-bgp {
    prefix bgp;
    revision-date 2016-06-21;
  }

  organization
     "IETF BGP Enabled Services WG";

  contact
     "BESS working group - bess@ietf.org";

  description
    "This YANG module defines a YANG data model to configure and
     manage BGP Layer3 VPNs. It augments the IETF bgp yang model
     and IETF network instance model to add L3VPN specific
     configuration and operational knobs.


     Terms and Acronyms

     AF : Address Family

     AS : Autonomous System

     ASBR : Autonomous Systems Border Router

     BGP (bgp) : Border Gateway Protocol

     CE  : Customer Edge

     IP (ip) : Internet Protocol

     IPv4 (ipv4):Internet Protocol Version 4

     IPv6 (ipv6): Internet Protocol Version 6

     L3VPN: Layer 3 VPN

     PE : Provider Edge

     RT : Route Target

     RD : Route Distinguisher

     VPN : Virtual Private Network

     VRF : Virtual Routing and Forwarding

    ";

  revision 2017-10-15 {
    description
      "Removed state containers per NMDA aligntment" +
      "Changes for network instance ni-type alignment" +
      "Other cleanups";
    reference "";
  }
  revision 2017-04-25 {
    description
      "Reused ietf-roting-types.yang for vpn route-targets" +
      " and route distinguisher types";
    reference "";
  }

  revision 2016-09-09 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Data Model for BGP L3VPN config management";
  }

  // Local typedef for RD
  typedef bgp-rd-type {
    type union {
      // Either RD value as per IETF routing types or AUTO assigned value 
      type rt-types:route-distinguisher; 
      type enumeration {
        enum auto-assigned { 
          description "Assigned by system";
        }
      }
    }
    description "BGP RD type augmentation for configured and Auto RD value";
  }
      
  //Label mode
  typedef bgp-label-mode {
    type enumeration {
      enum per-ce {
        description "Allocate labels per CE";
      }
      enum per-route {
        description "Allocate labels per prefix";
      }
      enum per-vpn {
        description "Allocate labels per VRF";
      }
    }
    description "BGP label allocation mode";
  }

  //RD
  grouping route-distinguisher-params {
    description "Route distinguisher value as per RFC4364";
    leaf rd {
      type bgp-rd-type;
      description "Route distinguisher value as per RFC4364";
    }
    leaf auto-rd {
      type rt-types:route-distinguisher;
      config false;
      description 
        "Automatically assigned RD value when rd AUTO is configured";
    }
  }

  //Fwding mode
  grouping forwarding-mode {
    description "Forwarding mode of interface for ASBR scenario";
    leaf forwarding-mode {
      type enumeration {
        enum mpls {
          description "Forwarding mode mpls";
        }
      }
      description "Forwarding mode of interface for ASBR scenario";
    }
  }

  grouping label-security {
    description "Mpls label security for ASBR option B scenario";
    container mpls-label-security {
      description "MPLS label secruity";
      leaf rpf {
        type boolean;
        description "Enable MPLS label security rpf on interface";
      }
    }
  }

  //per VPN instance table limit under BGP
  grouping  vpn-pfx-limit {
    description "Per VPN instance table limit under BGP";
    container vpn-prefix-limit {
      description
       "The prefix limit config sets a limit on the maximum
        number of prefixes supported in the existing VPN
        instance, preventing the PE from importing excessive
        VPN route prefixes.
       ";

      leaf prefix-limit-number {
        type uint32 {
          range "1..4294967295";
        }
        description
             "Specifies the maximum number of prefixes supported in the
              VPN instance IPv4 or IPv6 address family.";
      }

      choice prefix-limit-action {
        description ".";
        case enable-alert-percent {
          leaf alert-percent-value {
             type rt-types:percentage;
             description
               "Specifies the proportion of the alarm threshold to the
                maximum number of prefixes.";
          }
          leaf route-unchanged {
             type boolean;
             default "false";
             description
                 "Indicates that the routing table remains unchanged.
                  By default, route-unchanged is not configured. When
                  the number of prefixes in the routing table is
                  greater than the value of the parameter number,
                  routes are processed as follows:
                  (1)If route-unchanged is configured, routes in the
                     routing table remain unchanged.
                  (2)If route-unchanged is not configured, all routes
                     in the routing table are deleted and then
                     re-added.";
          }
        }
        case enable-simple-alert {
          leaf simple-alert {
            type boolean;
            default "false";
            description
                 "Indicates that when the number of VPN route prefixes
                  exceeds number, prefixes can still join the VPN
                  routing table and alarms are displayed.";
          }
        }
      }
    }
  }

  grouping global-imports {
      description "Grouping for imports from global routing table";
    container import-from-global {
      description "Import from global routing table";
      leaf enable {
        type boolean;
        description "Enable";
      }
      leaf advertise-as-vpn {
        type boolean;
        description
          "Advertise routes imported from global table as VPN routes";
      }
      leaf route-policy {
        type string;
        description "Route policy as filter for importing routes";
      }

      leaf bgp-valid-route {
        type boolean;
        description
          "Enable all valid routes (including non-best paths) to be
           candidate for import";
      }

      leaf protocol {
        type enumeration {
          enum ALL {
            value "0";
            description "ALL:";
          }
          enum Direct {
            value "1";
            description "Direct:";
          }
          enum OSPF {
            value "2";
            description "OSPF:";
          }
          enum ISIS {
            value "3";
            description "ISIS:";
          }
          enum Static {
            value "4";
            description "Static:";
          }
          enum RIP {
            value "5";
            description "RIP:";
          }
          enum BGP {
            value "6";
            description "BGP:";
          }
          enum OSPFV3 {
            value "7";
            description "OSPFV3:";
          }
          enum RIPNG {
            value "8";
            description "RIPNG:";
          }
        }
        description
          "Specifies the protocol from which routes are imported.
           At present, In the IPv4 unicast address family view,
           the protocol can be IS-IS, static, direct and BGP.";
      }

      leaf instance {
        type string;
        description
             "Specifies the instance id of the protocol";
      }
    }
  }

  grouping global-exports {
    description "Grouping for exports routes to global table";
    container export-to-global {
      description "Export to global routing table";
      leaf enable {
        type boolean;
          description "Enable";
      }
    }
  }

  grouping route-target-params {
    description "Grouping to specify rules for route import and export";
    container vpn-targets {
      description
        "Set of route-targets to match for import and export routes
         to/from VRF";
      uses rt-types:vpn-route-targets;
      leaf route-policy {
        type string;
        description
          "Reference to the route policy containing set of route-targets.
           TBD: leafref to policy xpath in IETF route policy model";
       }
    }
  }

  grouping route-tbl-limit-params {
     description "Grouping for VPN table prefix limit config";
     leaf routing-table-limit-number {
        type uint32 {
          range "1..4294967295";
        }
        description
          "Specifies the maximum number of routes supported by a
           VPN instance. ";
        }

       choice routing-table-limit-action {
          description ".";
           case enable-alert-percent {
             leaf alert-percent-value {
               type rt-types:percentage;
               description
                 "Specifies the percentage of the maximum number of
                  routes. When the maximum number of routes that join
                  the VPN instance is up to the value
                  (number*alert-percent)/100, the system prompts
                  alarms. The VPN routes can be still added to the
                  routing table, but after the number of routes
                  reaches number, the subsequent routes are
                  dropped.";
           }
        }
        case enable-simple-alert {
          leaf simple-alert {
               type boolean;
               description
                 "Indicates that when VPN routes exceed number, routes
                  can still be added into the routing table, but the
                  system prompts alarms.
                  However, after the total number of VPN routes and
                  network public routes reaches the unicast route limit
                  specified in the License, the subsequent VPN routes
                  are dropped.";
             }
           }
       }
   }

   grouping routing-tbl-limit {
      description ".";
      container routing-table-limit {
         description
           "The routing-table limit command sets a limit on the maximum
            number of routes that the IPv4 or IPv6 address family of a
            VPN instance can support.
            By default, there is no limit on the maximum number of
            routes that the IPv4 or IPv6 address family of a VPN
            instance can support, but the total number of private
            network and public network routes on a device cannot
            exceed the allowed maximum number of unicast routes.";

            uses route-tbl-limit-params;
       }
   }

  // Tunnel policy parameters
  grouping tunnel-params {
     description "Tunnel parameters";
     container tunnel-params {
        description "Tunnel config parameters";
           leaf tunnel-policy {
              type string;
              description
                  "Tunnel policy to steer the VPN traffic into specific tunnel";
           }
        }
     }

  // Grouping for the L3vpn specific parameters under VRF
  // (network-instance)
  grouping l3vpn-vrf-params {
      description "Specify route filtering rules for import/export";
      container ipv4 {
         description
           "Specify route filtering rules for import/export";
         container unicast {
            description
              "Specify route filtering rules for import/export";
            uses route-target-params;
            uses global-imports;
            uses global-exports;
            uses routing-tbl-limit;
            uses tunnel-params;
         }
      }
      container ipv6 {
         description
           "Ipv6 address family specific rules for import/export";
         container unicast {
             description "Ipv6 unicast address family";
             uses route-target-params;
             uses global-imports;
             uses global-exports;
             uses routing-tbl-limit;
             uses tunnel-params;
         }
     }
  }

  grouping bgp-label-mode {
       description "MPLS/VPN label allocation mode";
         leaf label-mode {
           type bgp-label-mode;
           description "Label allocation mode";
         }
  }

  grouping retain-route-targets {
       description "Grouping for route target accept";
    container retain-route-targets {
      description "Control route target acceptance behavior for ASBRs";
      leaf all {
        type empty;
        description "Disable filtering of all route-targets";
      }
      leaf route-policy {
        type string;
        description "Filter routes as per filter policy name
                     TBD: leafref to IETF routing policy model";
      }
    }
  }

  //
  // VRF specific parameters.
  // RD and RTs and route import-export rules are added under
  // network instance container in network instance model, hence
  // per VRF scoped
  augment "/ni:network-instances/ni:network-instance/ni:ni-type" {
     description
       "Augment network instance for per VRF L3vpn parameters";
    case l3vpn {
      container l3vpn {
        description "Configuration of L3VPN specific parameters";

        uses route-distinguisher-params;
        uses l3vpn-vrf-params ;
      }
    }
  }

  // bgp mpls forwarding enable required for inter-as option AB.
  augment "/if:interfaces/if:interface" {
    description
      "BGP mpls forwarding mode configuration on interface for
       ASBR scenario";
    uses forwarding-mode ;
    uses label-security;
  }

  //
  // BGP Specific Paramters
  //

  //
  // Retain route-target for inter-as option ASBR knob.
  // vpn prefix limits
  // vpnv4/vpnv6 address-family only.
  augment "/bgp:bgp/bgp:global/bgp:afi-safis/" +
          "bgp:afi-safi/bgp:l3vpn-ipv4-unicast" {
    description "Retain route targets for ASBR scenario";
    uses retain-route-targets;
    uses vpn-pfx-limit;
  }

  augment "/bgp:bgp/bgp:global/bgp:afi-safis/" +
          "bgp:afi-safi/bgp:l3vpn-ipv6-unicast" {
    description "Retain route targets for ASBR scenario";
    uses retain-route-targets;
    uses vpn-pfx-limit;
  }

  // Label allocation mode configuration. Certain AFs only.
  augment "/bgp:bgp/bgp:global/bgp:afi-safis/" +
          "bgp:afi-safi/bgp:ipv4-unicast" {
     description
       "Augment BGP global AF mode for label allocation mode
        configuration";
     uses bgp-label-mode ;
     uses routing-tbl-limit;
  }

  augment "/bgp:bgp/bgp:global/bgp:afi-safis/" +
          "bgp:afi-safi/bgp:ipv6-unicast" {
     description
       "Augment BGP global AF mode for label allocation mode
        configuration";
     uses bgp-label-mode ;
     uses routing-tbl-limit;
  }
}


&lt;CODE ENDS&gt;
    </artwork>
    </figure>
</section>

<section anchor="IANA" title="IANA Considerations">

</section>

<section anchor="Security" title="Security Considerations">
<t>
       The transport protocol used for sending the BGP L3VPN data MUST support 
       authentication and SHOULD support encryption.
       The data-model by itself does not create any security implications.
</t>
<t>
This draft does not change any underlying security issues inherent in 
<xref target="I-D.ietf-rtgwg-ni-model"></xref> and <xref target="I-D.ietf-idr-bgp-model"></xref>.
</t>
</section>

<section anchor="Acknowledgements" title="Acknowledgements">
<t>
   The authors would like to thank TBD for their detail reviews and comments.
</t>
</section>

    <!-- Possibly a 'Contributors' section ... -->

</middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629;
        here (as shown)
    2. simply use a PI
        "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds:
          include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included
    files in the same directory as the including file. You can also define
    the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be
    either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include=
      "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2119;

      &RFC4364;

      &RFC6020;

      &RFC6241;

      &I-D.ietf-rtgwg-routing-types;

      &I-D.ietf-rtgwg-ni-model;

      &I-D.ietf-idr-bgp-model;

    </references>

    <references title="Informative References">

      &RFC2547;

      &RFC4760;

      &RFC4271;

    <!--  &I-D.draft-bierman-netconf-yang-api;-->

    <!--  &I-D.draft-lhotka-netmod-yang-json;-->
      
    <!-- &I-D.draft-ietf-netmod-interfaces-cfg; -->
    </references>
    <!-- Change Log
    -->
  </back>
</rfc>
